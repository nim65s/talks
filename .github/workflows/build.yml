name: CI/CD

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: nixbuild/nix-quick-install-action@v32
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ hashFiles('**/*.nix', '**/flake.lock') }}
      - run: nix flake check -L
      - run: nix build -L
      - uses: actions/upload-pages-artifact@v3
        with:
          path: result/

  mirror:
    name: Mirror to gitlab
    if: github.repository == 'nim65s/talks' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Mirror to gitlab
        env:
          GIT_SSH_COMMAND: ssh -o UserKnownHostsFile=.known_hosts
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | ssh-add -
          git push git@gitlab.laas.fr:gsaurel/talks main

  deploy:
    name: publish on github pages
    if: github.repository == 'nim65s/talks' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    name: Release on Github
    if: github.repository == 'nim65s/talks' && startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.ref_name }}
      - run: curl https://github.com/nim65s.gpg | gpg --import
      - name: validate signature
        run: >
          git verify-tag --raw ${{ github.ref_name }} 2>&1
          | grep -q 'VALIDSIG 9B1A79065D2F2B806C8A5A1C7D2ACDAF4653CF28'
      - uses: nixbuild/nix-quick-install-action@v32
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ hashFiles('**/*.nix', '**/flake.lock') }}
      - run: nix develop . --command make release
      - run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - run: gh release create -t "Release ${{ env.TAG}}" ${{ env.TAG }} nim65s-talks.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
